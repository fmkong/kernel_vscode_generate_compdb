{
    "files.associations": {
        "*.examples": "makefile",
        "*.modules": "makefile",
        "*.scons": "python",
        "cam_trace.h": "c",
        "types.h": "c",
        "slab.h": "c",
        "cam_common_util.h": "c",
        "string.h": "c",
        "cam_debug_util.h": "c",
        "of.h": "c",
        "stdint.h": "c",
        "iopoll.h": "c",
        "kernel.h": "c",
        "ais_ife_csid_core.h": "c",
        "io.h": "c",
        "module.h": "c"
    },
    "C_Cpp.errorSquiggles": "Disabled",
    "C_Cpp.intelliSenseEngineFallback": "Disabled",
    "C_Cpp.intelliSenseEngine": "Disabled",
    "C_Cpp.autocomplete": "Disabled",
    "clangd.arguments": [
        // "--completion-style=detailed",
        // "--header-insertion=never",
        // "--clang-tidy",
        // Let Clangd generate more detailed logs
        "--log=verbose",
        // The output JSON file is more beautiful
        "--pretty",
        // Global completion (the pop-up suggestions during input will provide possible symbols in all files configured in CMakeLists.txt, and the header file will be automatically supplemented)
        "--all-scopes-completion",
        // More detailed completion
        "--completion-style=detailed",
        // Allow supplementary header files
        "--header-insertion=iwyu",
        // In input suggestions, items that contain header files are distinguished by dots from items that do not yet contain header files
        "--header-insertion-decorators",
        // Automatically analyze files in the background (based on complie)_ Commands, which we generate with CMake)
        "--background-index",
        // Enable clang tidy to provide static checking
        "--clang-tidy",
        // The parameter of clang tidy static check indicates which rules are followed for static check. For details, see "advantages over VSCode configured according to official documents"
        // The * after the parameter indicates a wildcard
        // Adding - such as - modernize use trailing return type before the parameter will disable a rule
        "--clang-tidy-checks=cppcoreguidelines-*,performance-*,bugprone-*,portability-*,modernize-*,google-*",
        // Default formatting style: Google open source project code Guide
        "--fallback-style=Google",
        // Number of tasks opened at the same time
        "-j=12",
        // pch optimized location (memory or disk, selecting memory will increase memory overhead, but will improve performance)
        "--pch-storage=memory",
        // After adding this item, placeholders will be provided for the parameters when completing the function. After typing, press Tab to switch to the next placeholder or even the end of the function
        "--function-arg-placeholders",
        // compelie_ Directory location of the commands.json file (relative to the workspace, the file generated by CMake is in the build folder by default, so it is set to build)
        // "--compile-commands-dir=build"
    ],
}